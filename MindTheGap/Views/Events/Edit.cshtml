@model MindTheGap.Models.Event

@{
    ViewBag.Title = "Edit";
}

<div class="jumbotron jumbotron-sm" style="background-color:#999999; box-shadow: rgba(0,0,0,0.18) 0px 2px 4px; font-family: 'Questrial', sans-serif; color:white; text-shadow: 0, 1px, 2px, rgba(0,0,0,0.20);">
    <div class="container">
        <div class="row">
            <div class="col-sm-12 col-lg-12">
                <h1 class="h1" style="text-align:center;text-shadow: rgba(0,0,0,0.18) 2px 4px 6px;">
                    Edit to your schedule
                </h1>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.eventId)

                @*<div class="form-group">
                        @Html.LabelFor(model => model.userId, "userId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("userId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.userId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.interestId, "interestId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("interestId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.interestId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    <h5 class="control-label col-md-3">Event Name</h5>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.summary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.summary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <h5 class="control-label col-md-3 ">Notes</h5>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.colorId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.colorId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.colorId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    <h5 class="control-label col-md-3">Start Date & Time</h5>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.starttime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.starttime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <h5 class="control-label col-md-3">End Date & Time</h5>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.endtime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.endtime, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.recurrence, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.recurrence, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.recurrence, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.reminders, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.reminders)
                                @Html.ValidationMessageFor(model => model.reminders, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.completed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.completed)
                                @Html.ValidationMessageFor(model => model.completed, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
